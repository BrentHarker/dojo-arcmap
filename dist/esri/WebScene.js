//>>built
define("require exports ./core/tsSupport/declareExtendsHelper ./core/tsSupport/decorateHelper ./core/tsSupport/paramHelper ./Map ./core/Error ./core/requireUtils ./core/promiseUtils ./core/JSONSupport ./core/Loadable ./core/urlUtils ./core/Logger ./core/Version ./core/accessorSupport/read ./core/accessorSupport/originUtils ./support/groundUtils ./support/webSceneUtils ./Basemap ./Viewpoint ./kernel ./geometry/support/jsonUtils ./geometry/support/castUtils ./geometry/Geometry ./geometry/HeightModelInfo ./geometry/SpatialReference ./webscene/Presentation ./webscene/InitialViewProperties ./webscene/Environment ./portal/PortalItem ./portal/Portal dojo/has dojo/_base/lang ./core/accessorSupport/decorators".split(" "),
function(u,d,E,g,F,G,h,v,l,w,H,m,I,x,J,y,K,L,M,N,O,P,Q,R,S,p,z,A,B,C,r,T,n,e){var q=I.getLogger("esri.webscene"),U=T("dojo-debug-messages"),t=new x.Version(1,7,"webscene");d=function(d){function c(a){a=d.call(this)||this;return a.basemapElevationLayerIds=[],a.clippingArea=null,a.clippingEnabled=!1,a.sourceVersion=null,a.presentation=null,a.initialViewProperties=null,a.portalItem=null,a.resourceInfo=null,a.authoringApp=null,a.authoringAppVersion=null,a._isAuthoringAppSetByUser=!1,a._isAuthoringAppVersionSetByUser=
!1,a}return E(c,d),c.prototype.initialize=function(){if(this.otherwise(function(a){q.error("#load()","Failed to load web scene",a)}),this.resourceInfo){var a=void 0;try{a=this._validateJSON(this.resourceInfo)}catch(b){return void this.addResolvingPromise(l.reject(b))}this.read(a);this.addResolvingPromise(this._validateSpatialReference())}},c.prototype.getDefaults=function(a){return n.mixin(this.inherited(arguments),{presentation:{},initialViewProperties:{}})},c.prototype.readBasemap=function(a,b,
f){if(!b.baseMap)return null;a=n.mixin({},b.baseMap);delete a.elevationLayers;b=new M;return b.resourceInfo=a,b.read(a,{origin:"web-scene",portal:f&&f.portal}),b},c.prototype.writeBasemap=function(a,b,f,c){var k=this;if(a&&(b.baseMap||(b.baseMap={}),a.write(b.baseMap,c),b.baseMap.elevationLayers=[]),this.ground)a=this.ground.layers.filter(function(a){return!k._groundLayerIsOperational(a)&&k.verifyWriteLayer(a,c)}).map(function(a){return a.write(null,c)}),0<a.length&&(b.baseMap||(b.baseMap={id:"basemap",
title:"Basemap"}),b.baseMap.elevationLayers=a.toArray())},c.prototype.readClippingArea=function(a){return a&&a.geometry?P.fromJSON(a.geometry):null},c.prototype.writeClippingArea=function(a,b){b.clippingArea||(b.clippingArea={});b.clippingArea.geometry=a.toJSON()},c.prototype.readClippingEnabled=function(a,b){return b.clippingArea?!!b.clippingArea.clip:!1},c.prototype.writeClippingEnabled=function(a,b){this.clippingArea&&(b.clippingArea||(b.clippingArea={}),b.clippingArea.clip=a)},c.prototype.writeLayers=
function(a,b,f,c){var k=this,D=n.mixin({},c,{layerContainerType:"ground"}),d=n.mixin({},c,{layerContainerType:"operational-layers"});f=this.ground.layers.filter(function(a){return k._groundLayerIsOperational(a)&&k.verifyWriteLayer(a,D)}).map(function(a){return a.write(null,D)});f.addMany(a.filter(function(a){return k.verifyWriteLayer(a,d)}).map(function(a){return a.write(null,d)}));f=f.filter(function(a){return!!a});b.operationalLayers=f.toArray()},c.prototype.verifyWriteLayer=function(a,b){return a.write?
!0:(b&&b.messages.push(new h("layer:unsupported","Layers ("+a.title+", "+a.id+") of type '"+a.declaredClass+"' cannot be persisted in web scenes",{layer:a})),!1)},c.prototype.readSourceVersion=function(a,b){a=b.version.split(".");b=a[1];return{major:parseInt(a[0],10),minor:parseInt(b,10)}},c.prototype.writeSourceVersion=function(a,b){b.version=t.major+"."+t.minor},Object.defineProperty(c.prototype,"authoringApp",{set:function(a){this._isAuthoringAppSetByUser=!0;this._set("authoringApp",a)},enumerable:!0,
configurable:!0}),c.prototype.writeAuthoringApp=function(a,b){a&&this._isAuthoringAppSetByUser?b.authoringApp=a:b.authoringApp="ArcGIS API for JavaScript"},Object.defineProperty(c.prototype,"authoringAppVersion",{set:function(a){this._isAuthoringAppVersionSetByUser=!0;this._set("authoringAppVersion",a)},enumerable:!0,configurable:!0}),c.prototype.writeAuthoringAppVersion=function(a,b){a&&this._isAuthoringAppVersionSetByUser?b.authoringAppVersion=a:b.authoringAppVersion=O.version},c.prototype.writePresentation=
function(a,b,f,c){var k=this;a=a.write({},c);a.slides.forEach(function(a){a.visibleLayers=a.visibleLayers.filter(function(a){var b=k.ground.layers.find(function(b){return b.id===a.id});return!b||k._groundLayerIsOperational(b)})});b.presentation=a},c.prototype.readInitialViewProperties=function(a,b){a={};return b.initialState&&b.initialState.environment&&(a.environment=B.fromJSON(b.initialState.environment)),b.spatialReference&&(a.spatialReference=p.fromJSON(b.spatialReference)),b.heightModelInfo&&
(a.heightModelInfo=S.fromJSON(b.heightModelInfo)),a.viewingMode=b.viewingMode||"global",b.initialState&&b.initialState.viewpoint&&(a.viewpoint=N.fromJSON(b.initialState.viewpoint)),new A(a)},c.prototype.writeInitialViewProperties=function(a,b,f,c){a&&(f={},a.environment&&(f.environment=a.environment.write({},c)),a.viewpoint&&(f.viewpoint=a.viewpoint.toJSON()),0!==Object.keys(f).length&&(b.initialState=f),b.spatialReference=a.spatialReference?a.spatialReference.toJSON():p.WebMercator.toJSON(),b.viewingMode=
null!=a.viewingMode?a.viewingMode:"global")},c.prototype.load=function(){return this.addResolvingPromise(this._loadFromSource()),this},c.prototype.read=function(a,b){var f=this;b=n.mixin({},b,{origin:"web-scene"});var c=this._isAuthoringAppVersionSetByUser,k=this._isAuthoringAppSetByUser,d=arguments;if(J.readLoadable(this,a,function(b){return f.inherited(d,[a,b])},b),k||(this._isAuthoringAppSetByUser=!1),c||(this._isAuthoringAppVersionSetByUser=!1),a.baseMap&&Array.isArray(a.baseMap.elevationLayers)){var e=
a.baseMap.elevationLayers.map(function(a){return{id:a.id}});this.presentation.slides.forEach(function(a){a.visibleLayers.addMany(e)})}return this},c.prototype.write=function(a,b){if("loaded"!==this.loadStatus){var f=new h("webscene:not-loaded","Web scene must be loaded before it can be serialized");throw q.error("#toJSON()","Web scene must be loaded before it can be serialized",this.loadError||this.loadStatus),f;}return b=n.mixin({},b,{origin:"web-scene"}),this.inherited(arguments,[a,b])},c.prototype.save=
function(a){var b=this;if(!this.portalItem)return q.error("save(): requires the .portalItem property to be set"),l.reject(new h("webscene:portal-item-not-set","Portal item to save to has not been set on the WebScene"));if("Web Scene"!==this.portalItem.type)return l.reject(new h("webscene:portal-item-wrong-type",'Portal item needs to have type "Web Scene"'));var f,c;return this.load().then(function(){return b._loadBasemaps()}).then(function(){return f=b._enableVerifyItemRelativeUrls({origin:"web-scene",
url:b.portalItem.itemUrl&&m.urlToObject(b.portalItem.itemUrl),messages:[],portal:b.portalItem.portal||r.getDefault(),writtenProperties:[],blockedRelativeUrls:[]}),c=b.write(null,f),b._verifySave(c,f,a).then(function(){return b._updateTypeKeywords(b.portalItem),b.portalItem.update({data:c})})}).then(function(){return y.updateOrigins(f),l.resolve(b.portalItem)})},c.prototype.saveAs=function(a,b){var f=this;if(!a)return q.error("saveAs(portalItem): requires a portal item parameter"),l.reject(new h("webscene:portal-item-required",
"saveAs requires a portal item to save to"));if(a.type&&"Web Scene"!==a.type||a.id)return l.reject(new h("webscene:portal-item-already-exists","WebScene can only saveAs to a new and empty portal item"));var c,k,d=a.portal||r.getDefault();return this.load().then(function(){return f._loadBasemaps()}).then(function(){return c=f._enableVerifyItemRelativeUrls({origin:"web-scene",url:null,messages:[],portal:d,writtenProperties:[],blockedRelativeUrls:[]}),k=f.write(null,c),f._verifySaveAs(k,c,b).then(function(){return d._signIn()})}).then(function(){return a.type=
"Web Scene",a.portal=d,f._updateTypeKeywords(a),d.user.addItem({item:a,folder:b&&b.folder,data:k})}).then(function(){return f.portalItem=a,w.prototype.read.call(f,{version:k.version,authoringApp:k.authoringApp,authoringAppVersion:k.authoringAppVersion},{name:"web-scene",url:a.itemUrl&&m.urlToObject(a.itemUrl)}),y.updateOrigins(c),l.resolve(a)})},c.prototype._verifySave=function(a,b,f,c){void 0===c&&(c=!1);var d=b.messages.filter(function(a){return"error"===a.type}).map(function(a){return new h(a.name,
a.message,a.details)});b.blockedRelativeUrls&&(d=d.concat(b.blockedRelativeUrls.map(function(a){return new h("url:unsupported","Relative url '"+a+"' is not supported in Web Scene")})));f&&f.ignoreUnsupported&&(d=d.filter(function(a){return"layer:unsupported"!==a.name&&"symbol:unsupported"!==a.name&&"property:unsupported"!==a.name}));var e,g=f&&f.strictSchemaValidationEnabled;return e=U||g?v.when(u,"./webscene/validator").then(function(b){b=b.validate(a);if(0<b.length){var f="webscene did not validate: "+
b.join(", ");q.error((c?"saveAs":"save")+"(): "+f)}return g?d.concat(b.map(function(a){return new h("webscene:schema-validation",a)})):d}):l.resolve(d),e.then(function(a){return 0<a.length?l.reject(new h("webscene:save","Failed to save webscene due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:a})):void 0})},c.prototype._verifySaveAs=function(a,b,f){return b.verifyItemRelativeUrls&&0<b.verifyItemRelativeUrls.writtenUrls.length?l.reject(L.createCopyError()):
this._verifySave(a,b,f,!0)},c.prototype.verifySaveAs=function(a){var b=this._enableVerifyItemRelativeUrls({origin:"web-scene",messages:[]}),f=this.write(null,b);return this._verifySaveAs(f,b,a)},c.prototype.updateFrom=function(a,b){void 0===b&&(b={});b.environmentExcluded||(this.initialViewProperties.environment=B.prototype.clone.apply(a.environment));b.viewpointExcluded||(this.initialViewProperties.viewpoint=a.viewpoint.clone());this.initialViewProperties.spatialReference=a.spatialReference.clone();
this.initialViewProperties.viewingMode=a.viewingMode;a.clippingArea?a.clippingArea!==this.clippingArea&&(this.clippingArea=a.clippingArea.clone(),this.clippingEnabled=!0):this.clippingEnabled=!1;this.initialViewProperties.heightModelInfo=a.heightModelInfo?a.heightModelInfo.clone():null;a.map===this&&a.allLayerViews.forEach(function(a){a.layer.visible=a.visible})},c.prototype.isDefaultGroundLayer=function(a){var b=K.groundElevationLayers["world-elevation"];return a.id===b.id&&m.normalize(a.url)===
m.normalize(b.url)},c.prototype._groundLayerIsOperational=function(a){return"esri.layers.ElevationLayer"!==a.declaredClass?!0:-1!==this.basemapElevationLayerIds.indexOf(a.id)||this.isDefaultGroundLayer(a)?this.presentation.slides.some(function(b){return!b.visibleLayers.some(function(b){return b.id===a.id})})?!0:!1:!0},c.prototype._loadFromSource=function(){return this.resourceInfo?this._loadFromJSON(this.resourceInfo,{origin:"web-scene"}):this.portalItem&&this.portalItem.id?this._loadFromItem(this.portalItem):
this._loadBasemaps()},c.prototype._readAndLoadFromJSON=function(a,b){a=this._validateJSON(a,b&&b.url&&b.url.path);return this.read(a,b),this._loadFromJSON(a,b)},c.prototype._loadFromJSON=function(a,b){var c=this;return this._validateSpatialReference().then(function(){return v.when(u,"./portal/support/layersCreator")}).then(function(f){var d=[],e=a.operationalLayers,g=[];a.baseMap&&Array.isArray(a.baseMap.elevationLayers)&&(g.push.apply(g,a.baseMap.elevationLayers),c.basemapElevationLayerIds=a.baseMap.elevationLayers.map(function(a){return a.id}));
var h=function(a){return a.layers&&(a.layers=a.layers.filter(h)),"ArcGISTiledElevationServiceLayer"===a.layerType?(g.push(a),!1):!0};e&&(e=e.filter(h));var m={context:n.mixin({},b,{layerContainerType:"operational-layers"})};if(c.portalItem&&(m.context.portal=c.portalItem.portal||r.getDefault()),0<g.length){var p=n.mixin({},m,{context:n.mixin({},m.context,{layerContainerType:"ground"})});p.defaultLayerType="ArcGISTiledElevationServiceLayer";d.push.apply(d,f.populateOperationalLayers(c.ground.layers,
g,p))}return e&&0<e.length&&d.push.apply(d,f.populateOperationalLayers(c.layers,e,m)),l.eachAlways(d).then(function(){})}).then(function(){return c._loadBasemaps()})},c.prototype._loadBasemaps=function(){var a=[];return this.basemap&&a.push(this.basemap.load()),this.presentation.slides.forEach(function(b){b.basemap&&a.push(b.basemap.load())}),l.eachAlways(a).then(function(){})},c.prototype._loadFromItem=function(a){var b=this;return a.load().otherwise(function(a){throw new h("webscene:load-portal-item",
"Failed to load portal item",{error:a});}).then(function(){if("Web Scene"!==a.type)throw new h("webscene:invalid-portal-item","Invalid portal item type '${type}', expected 'Web Scene'",{type:a.type});}).then(function(){return a.fetchData()}).then(function(c){return b.resourceInfo=c,b._readAndLoadFromJSON(c,{origin:"web-scene",url:m.urlToObject(a.itemUrl),portal:a.portal||r.getDefault()})})},c.prototype._validateSpatialReference=function(){var a,b=this.initialViewProperties,c=b.spatialReference||p.WebMercator;
if("local"!==b.viewingMode){if(!c.isWGS84&&!c.isWebMercator)return l.reject(new h("webscene:unsupported-spatial-reference","Unsupported spatial reference (${spatialReference.wkid}) in global mode, only Web Mercator or WGS84 GCS are supported",{spatialReference:c,viewingMode:b.viewingMode}));a=function(a){return!a||a.isWGS84||a.isWebMercator}}else{if(c.isGeographic)return l.reject(new h("webscene:unsupported-spatial-reference","Unsupported spatial reference (${spatialReference.wkid}) in local mode, only projected coordinate systems are supported",
{spatialReference:c,viewingMode:b.viewingMode}));a=function(a){return!a||a.equals(c)}}var d=function(a){return a&&(a.camera&&a.camera.position&&a.camera.position.spatialReference||a.targetGeometry&&a.targetGeometry.spatialReference)},e=d(b.viewpoint);return e&&!a(e)?l.reject(new h("webscene:incompatible-camera-spatial-reference","Camera spatial reference (${cameraSpatialReference.wkid}) is incompatible with the scene spatial reference (${sceneSpatialReference.wkid})",{cameraSpatialReference:e,sceneSpatialReference:c,
viewingMode:b.viewingMode})):(e=this.presentation.slides.find(function(b){return!a(d(b.viewpoint))}))?(e=d(e.viewpoint),l.reject(new h("webscene:incompatible-slide-spatial-reference","Slide spatial reference (${slideSpatialReference.wkid}) is incompatible with the scene spatial reference (${sceneSpatialReference.wkid})",{slideSpatialReference:e,sceneSpatialReference:c,viewingMode:b.viewingMode}))):l.resolve()},c.prototype._validateJSON=function(a,b){void 0===b&&(b=null);a=this._sanitizeJSON(a,b);
b=x.Version.parse(a.version,"webscene");return t.validate(b),a.version=b.major+"."+b.minor,1===b.major&&2>=b.minor&&(a.spatialReference=p.WebMercator.toJSON()),a},c.prototype._sanitizeJSON=function(a,b){void 0===b&&(b=null);return{version:a.version||"",baseMap:a.baseMap,operationalLayers:a.operationalLayers,authoringApp:a.authoringApp||"",authoringAppVersion:a.authoringAppVersion||"",viewingMode:a.viewingMode||"global",presentation:a.presentation&&z.sanitizeJSON(a.presentation)||{},initialState:a.initialState,
spatialReference:a.spatialReference||p.WebMercator.toJSON(),heightModelInfo:a.heightModelInfo||null,clippingArea:a.clippingArea}},c.prototype._updateTypeKeywords=function(a){"local"===this.initialViewProperties.viewingMode?a.typeKeywords?-1===a.typeKeywords.indexOf("ViewingMode-Local")&&a.typeKeywords.push("ViewingMode-Local"):a.typeKeywords=["ViewingMode-Local"]:"global"===this.initialViewProperties.viewingMode&&a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter(function(a){return"ViewingMode-Local"!==
a}));a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter(function(a,c,d){return d.indexOf(a)===c}))},Object.defineProperty(c.prototype,"_verifyItemRelativeRootPath",{get:function(){return this.portalItem&&this.portalItem.itemUrl?m.urlToObject(this.portalItem.itemUrl).path:null},enumerable:!0,configurable:!0}),c.prototype._enableVerifyItemRelativeUrls=function(a){var b=this._verifyItemRelativeRootPath;return b&&(a.verifyItemRelativeUrls={rootPath:b,writtenUrls:[]}),a},c.fromJSON=function(a){return new this({resourceInfo:a})},
c}(e.declared(G,H,w));return d.VERSION=t,g([e.property({json:{write:{allowNull:!0}}})],d.prototype,"basemap",void 0),g([e.reader("basemap",["baseMap"])],d.prototype,"readBasemap",null),g([e.writer("basemap")],d.prototype,"writeBasemap",null),g([e.property({type:R}),e.cast(Q.cast)],d.prototype,"clippingArea",void 0),g([e.reader("clippingArea")],d.prototype,"readClippingArea",null),g([e.writer("clippingArea")],d.prototype,"writeClippingArea",null),g([e.property({type:Boolean})],d.prototype,"clippingEnabled",
void 0),g([e.reader("clippingEnabled",["clippingArea"])],d.prototype,"readClippingEnabled",null),g([e.writer("clippingEnabled")],d.prototype,"writeClippingEnabled",null),g([e.property()],d.prototype,"layers",void 0),g([e.writer("layers")],d.prototype,"writeLayers",null),g([e.property({readOnly:!0,json:{write:{allowNull:!0}}})],d.prototype,"sourceVersion",void 0),g([e.reader("sourceVersion",["version"])],d.prototype,"readSourceVersion",null),g([e.writer("sourceVersion")],d.prototype,"writeSourceVersion",
null),g([e.property({type:String,json:{write:{allowNull:!0}}})],d.prototype,"authoringApp",null),g([e.writer("authoringApp")],d.prototype,"writeAuthoringApp",null),g([e.property({type:String,json:{write:{allowNull:!0}}})],d.prototype,"authoringAppVersion",null),g([e.writer("authoringAppVersion")],d.prototype,"writeAuthoringAppVersion",null),g([e.property({type:z})],d.prototype,"presentation",void 0),g([e.writer("presentation")],d.prototype,"writePresentation",null),g([e.property({type:A})],d.prototype,
"initialViewProperties",void 0),g([e.reader("initialViewProperties",["initialState.environment","spatialReference","heightModelInfo","viewingMode","initialState.viewpoint"])],d.prototype,"readInitialViewProperties",null),g([e.writer("initialViewProperties")],d.prototype,"writeInitialViewProperties",null),g([e.property({type:C})],d.prototype,"portalItem",void 0),g([e.property()],d.prototype,"resourceInfo",void 0),g([F(0,e.cast(C))],d.prototype,"saveAs",null),g([e.property()],d.prototype,"_verifyItemRelativeRootPath",
null),d=g([e.subclass("esri.WebScene")],d)});