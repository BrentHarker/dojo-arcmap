//>>built
define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper dojo/_base/lang ../core/accessorSupport/decorators ../core/Error ../core/MultiOriginJSONSupport ../core/urlUtils ../core/promiseUtils ../core/lang ../request ../geometry/Extent ../geometry/SpatialReference ../portal/support/jsonContext ./TiledLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/ArcGISCachedService ./support/TileInfo ./support/vectorTileLayerLoader ../views/vectorTiles/style/StyleRepository ../views/vectorTiles/SchemaHelper".split(" "),
function(c,D,k,d,l,a,m,n,f,p,q,r,t,u,v,w,x,y,z,A,g,B,C,h){c=function(c){function a(b,a){b=c.call(this)||this;return b.currentStyleInfo=null,b.fullExtent=null,b.operationalLayerType="VectorTileLayer",b.tileInfo=null,b.type="vector-tile",b.url=null,b}return k(a,c),a.prototype.normalizeCtorArgs=function(b,a){return"string"==typeof b?l.mixin({},{url:b},a):b},a.prototype.load=function(){var b=this,a=this.loadFromPortal({supportedTypes:["Vector Tile Service"],supportsData:!1}).then(function(){if(b.portalItem&&
b.portalItem.id){var a=b.portalItem.itemUrl+"/resources/styles/root.json";return r(a,{query:{f:"json"}}).then(function(e){e.data&&b.read({url:a},v.createForItem(b.portalItem))})}}).always(function(){return b.loadStyle()});return this.addResolvingPromise(a),this},Object.defineProperty(a.prototype,"attributionDataUrl",{get:function(){var b=this.currentStyleInfo;return(b=b&&b.serviceUrl&&f.urlToObject(b.serviceUrl))?this._getDefaultAttribution(b.path):null},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,
"serviceUrl",{get:function(){return this.currentStyleInfo&&this.currentStyleInfo.serviceUrl||null},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"spatialReference",{get:function(){return this.tileInfo&&this.tileInfo.spatialReference||null},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"styleUrl",{get:function(){return this.currentStyleInfo&&this.currentStyleInfo.styleUrl||null},enumerable:!0,configurable:!0}),a.prototype.writeStyleUrl=function(b,a){b&&f.isProtocolRelative(b)&&
(b="https:"+b);b&&!q.endsWith(b,"root.json")&&(b=f.join(b,"root.json"));a.styleUrl=b},a.prototype.readTileIndexType=function(b,a){return a.type},a.prototype.readTileIndexUrl=function(b,a){return f.join(this.serviceUrl,a.tileMap)},a.prototype.readTileServers=function(b,a){var e=this;b=a.tiles;return this.serviceUrl&&b.forEach(function(a,b,c){c[b]=f.join(e.serviceUrl,a)}),b},a.prototype.readVersion=function(a,e){return e.version?parseFloat(e.version):parseFloat(e.currentVersion)},a.prototype.readTileInfo256=
function(a,e){return g.fromJSON(h.create256x256CompatibleTileInfo(this.tileInfo.toJSON()))},a.prototype.readCompatibleTileInfo512=function(a,e){return g.fromJSON(h.create512x512CompatibleTileInfo(this.tileInfo.toJSON()))},a.prototype.loadStyle=function(a){a=a||this.url;if(this._loadingPromise&&"string"==typeof a&&this.url===a)return this._loadingPromise;var b=this._loadingPromise;return this._loadingPromise=this._getSourceAndStyle(a),b&&!b.isFulfilled()&&b.cancel(),this._loadingPromise},a.prototype.getTileUrl=
function(a,c,d){var b=this.tileServers[c%this.tileServers.length];return b=b.replace(/\{z\}/gi,a.toString()).replace(/\{y\}/gi,c.toString()).replace(/\{x\}/gi,d.toString())},a.prototype.write=function(a,c){return c&&c.origin&&!this.styleUrl?(c.messages&&c.messages.push(new m("vectortilelayer:unsupported","VectorTileLayer ("+this.title+", "+this.id+") with style defined by JSON only are not supported",{layer:this})),null):this.inherited(arguments,[a,c])},a.prototype._getSourceAndStyle=function(a){var b=
this;return a?B.loadMetadata(a).then(function(a){b._set("currentStyleInfo",{serviceUrl:a.serviceUrl,styleUrl:a.styleUrl,spriteUrl:a.spriteUrl,glyphsUrl:a.glyphsUrl,style:a.style,layerDefinition:a.layerDefinition});b._set("styleRepository",new C(a.style,a));b.read(a.layerDefinition)}):p.reject(Error("invalid style!"))},a.prototype._getDefaultAttribution=function(a){var b=a.match(/^https?:\/\/(basemaps|basemapsbeta)\.arcgis\.com(\/[^\/]+)?\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/vectortileserver/i);
a=["World_Basemap","World_Basemap_WGS84"];if(b){var c=b[3]&&b[3].toLowerCase();if(c)for(var b=b[2]||"",d=0;d<a.length;d++){var g=a[d];if(-1<g.toLowerCase().indexOf(c))return f.normalize("//static.arcgis.com/attribution/Vector"+b+"/"+g)}}},a}(a.declared(w,x,y,z,n,A));return d([a.shared({"2d":"../views/2d/layers/VectorTileLayerView2D","3d":"../views/3d/layers/VectorTileLayerView3D"})],c.prototype,"viewModulePaths",void 0),d([a.property({readOnly:!0,dependsOn:["currentStyleInfo"]})],c.prototype,"attributionDataUrl",
null),d([a.property({readOnly:!0})],c.prototype,"currentStyleInfo",void 0),d([a.property({type:t,readOnly:!0})],c.prototype,"fullExtent",void 0),d([a.property({readOnly:!0,dependsOn:["currentStyleInfo"]})],c.prototype,"serviceUrl",null),d([a.property({type:u,dependsOn:["tileInfo"],readOnly:!0})],c.prototype,"spatialReference",null),d([a.property({readOnly:!0})],c.prototype,"styleRepository",void 0),d([a.property({readOnly:!0,dependsOn:["currentStyleInfo"],json:{write:{ignoreOrigin:!0}}})],c.prototype,
"styleUrl",null),d([a.writer("styleUrl")],c.prototype,"writeStyleUrl",null),d([a.property({readOnly:!0})],c.prototype,"tileIndexType",void 0),d([a.reader("tileIndexType",["tileIndexType","type"])],c.prototype,"readTileIndexType",null),d([a.property({readOnly:!0})],c.prototype,"tileIndexUrl",void 0),d([a.reader("tileIndexUrl",["tileIndexUrl","tileMap"])],c.prototype,"readTileIndexUrl",null),d([a.property({readOnly:!0,type:g})],c.prototype,"tileInfo",void 0),d([a.property({readOnly:!0})],c.prototype,
"tileServers",void 0),d([a.reader("tileServers",["tiles"])],c.prototype,"readTileServers",null),d([a.property({json:{read:!1},readOnly:!0,value:"vector-tile"})],c.prototype,"type",void 0),d([a.property({json:{origins:{webDocument:{read:{source:"styleUrl"}},portalItem:{read:{source:"url"}}},write:!1,read:!1}})],c.prototype,"url",void 0),d([a.property({readOnly:!0})],c.prototype,"version",void 0),d([a.reader("version",["version","currentVersion"])],c.prototype,"readVersion",null),d([a.property({readOnly:!0})],
c.prototype,"tileInfo256",void 0),d([a.reader("tileInfo256",["tileInfo"])],c.prototype,"readTileInfo256",null),d([a.property({readOnly:!0})],c.prototype,"compatibleTileInfo512",void 0),d([a.reader("compatibleTileInfo512",["tileInfo"])],c.prototype,"readCompatibleTileInfo512",null),c=d([a.subclass("esri.layers.VectorTileLayer")],c)});