//>>built
define("dojo/_base/array dojo/Deferred ../../config ../../tasks/GeometryService ../Polyline ../Polygon ./webMercatorUtils ./spatialReferenceUtils ./jsonUtils".split(" "),function(h,H,I,J,n,A,z,C,K){function w(a,c){return Math.ceil((a-c)/(2*c))}function D(a,c){var b,d,k,f=a.paths||a.rings,e=f.length;for(b=0;e>b;b++)for(k=f[b].length,d=0;k>d;d++){var p=a.getPoint(b,d);a.setPoint(b,d,p.clone().offset(c,0))}return a}function x(a,c){if(!(a instanceof n||a instanceof A))throw console.error("straightLineDensify: the input geometry is neither polyline nor polygon"),
Error("straightLineDensify: the input geometry is neither polyline nor polygon");var b,d=a instanceof n,k=[];return h.forEach(d?a.paths:a.rings,function(a){k.push(b=[]);b.push([a[0][0],a[0][1]]);var e,d,l,f,m,g,q,h,n,r,t,u;for(m=0;m<a.length-1;m++){if(e=a[m][0],d=a[m][1],l=a[m+1][0],f=a[m+1][1],q=Math.sqrt((l-e)*(l-e)+(f-d)*(f-d)),h=(f-d)/q,n=(l-e)/q,r=q/c,1<r){for(g=1;r-1>=g;g++)u=g*c,t=n*u+e,u=h*u+d,b.push([t,u]);g=(q+Math.floor(r-1)*c)/2;t=n*g+e;u=h*g+d;b.push([t,u])}b.push([l,f])}}),d?new n({paths:k,
spatialReference:a.spatialReference}):new A({rings:k,spatialReference:a.spatialReference})}function F(a,c,b){c&&(a=x(a,1E6),a=z.webMercatorToGeographic(a,!0));return b&&(a=D(a,b)),a}function G(a,c,b){var d,k=a.x||a[0];return k>c?(d=w(k,c),a.x?a=a.clone().offset(-2*d*c,0):a[0]=k+-2*d*c):b>k&&(d=w(k,b),a.x?a=a.clone().offset(-2*d*b,0):a[0]=k+-2*d*b),a}function L(a,c){var b=-1;return h.forEach(c.cutIndexes,function(d,k){var f=c.geometries[k];h.forEach(f.rings||f.paths,function(a,b){h.some(a,function(d){if(180>
d[0])return!0;var c,e=0,g=a.length;for(d=0;g>d;d++)c=a[d][0],e=c>e?c:e;e=Number(e.toFixed(9));c=-360*w(e,180);e=a.length;for(d=0;e>d;d++)g=f.getPoint(b,d),f.setPoint(b,d,g.clone().offset(c,0));return!0})});d===b?f.rings?h.forEach(f.rings,function(b){a[d]=a[d].addRing(b)}):h.forEach(f.paths,function(b){a[d]=a[d].addPath(b)}):(b=d,a[d]=f)}),a}function y(a){for(var c=[],b=0,d=0,k=Math.min,f=Math.max,e=0;e<a.length;e++){for(var p=a[e],l=null,h=0;h<p.length;h++)l=p[h],c.push(l),0===h?(b=l[0],d=b):(b=k(b,
l[0]),d=f(d,l[0]));l&&c.push([(b+d)/2,0])}return c}var B;return{_straightLineDensify:x,normalizeCentralMeridian:function(a,c){var b=new H;c||(c=(B||(B=new J({url:I.geometryServiceUrl})),B));var d,k,f,e,p,l,E,m,g=[],q=[],v=0;h.forEach(a,function(a){if(!a||(d||(d=a.spatialReference,k=C.getInfo(d),f=d.isWebMercator,e=f?2.0037508342788905E7:180,p=f?-2.0037508342788905E7:-180,l=f?102100:4326,E=new n({paths:[[[e,p],[e,e]]],spatialReference:{wkid:l}}),m=new n({paths:[[[p,p],[p,e]]],spatialReference:{wkid:l}})),
!k))return void g.push(a);var b=K.fromJSON(a.toJSON()),c=a.extent;"point"===a.type?g.push(G(b,e,p)):"multipoint"===a.type?(b.points=h.map(b.points,function(a){return G(a,e,p)}),g.push(b)):"extent"===a.type?(b=c.clone()._normalize(null,null,k),g.push(b.rings?new A(b):b)):c?(a=2*w(c.xmin,p)*e,b=0===a?b:D(b,a),c=c.clone().offset(a,0),c.intersects(E)&&c.xmax!==e?(v=c.xmax>v?c.xmax:v,b=F(b,f),q.push(b),g.push("cut")):c.intersects(m)&&c.xmin!==p?(v=2*c.xmax*e>v?2*c.xmax*e:v,b=F(b,f,360),q.push(b),g.push("cut")):
g.push(b)):g.push(b)});for(var x=new n,r=w(v,e),t=-90,u=r;0<r;){var y=-180+360*r;x.addPath([[y,t],[y,-1*t]]);t*=-1;r--}return 0<q.length&&0<u?c?c.cut(q,x).then(function(d){q=L(q,d);var e=[];h.forEach(g,function(b,c){"cut"===b&&(b=q.shift(),a[c].rings&&1<a[c].rings.length&&b.rings.length>=a[c].rings.length?(g[c]="simplify",e.push(b)):g[c]=!0===f?z.geographicToWebMercator(b):b)});0<e.length?c.simplify(e).then(function(a){h.forEach(g,function(b,c){"simplify"===b&&(g[c]=!0===f?z.geographicToWebMercator(a.shift()):
a.shift())});b.resolve(g)}).otherwise(function(a){b.reject(a)}):b.resolve(g)}).otherwise(function(a){b.reject(a)}):b.reject(Error("esri.geometry.normalizeCentralMeridian: 'geometryService' argument is missing.")):(h.forEach(g,function(a,b){"cut"===a&&(a=q.shift(),g[b]=!0===f?z.geographicToWebMercator(a):a)}),b.resolve(g)),b.promise},getDenormalizedExtent:function(a){if(!a)return null;var c=a.extent;if(!c)return null;var b=a.spatialReference&&C.getInfo(a.spatialReference);if(!b)return c;var d=b.valid[0],
b=b.valid[1],k=c.width,f=c.xmax,e=c.xmin;if("extent"===a.type||0===k||b>=k||k>2*b||d>f||e>b)return c;var h;switch(a.type){case "polygon":if(!(1<a.rings.length))return c;h=y(a.rings);break;case "polyline":if(!(1<a.paths.length))return c;h=y(a.paths);break;case "multipoint":h=a.points}a=Math.min;for(var d=Math.max,l=c.clone(),n=0;n<h.length;n++){var m=h[n][0];0>m?(m+=b,e=d(m,e)):(m-=b,f=a(m,f))}return l.xmin=f,l.xmax=e,l.width<k?(l.xmin-=b,l.xmax-=b,l):c}}});