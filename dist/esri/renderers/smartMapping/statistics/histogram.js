//>>built
define("require exports dojo/_base/lang ../../../core/promiseUtils ./summaryStatistics ../../../tasks/support/StatisticDefinition ../../../tasks/support/GenerateRendererParameters ./support/utils ../support/utils".split(" "),function(I,J,w,k,q,x,y,f,m){function z(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return k.reject(f.createError("histogram:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=w.mixin({},a);return b.normalizationType=
f.getNormalizationType(b),b.layer=m.createLayerAdapter(b.layer),b.layer?b.layer.load().then(function(){var a=b.layer,c=b.valueExpression||b.sqlExpression,d=b.field,g=d?a.getField(d):null,d=g?g.type===p:!1,h=!b.classificationMethod||"equal-interval"===b.classificationMethod,l=m.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});if(l=f.verifyBasicFieldValidity(a,l,"histogram:invalid-parameters"))return k.reject(l);if(g){if(a=f.verifyFieldType(a,
g,"histogram:invalid-parameters",A))return k.reject(a);if(d){if(b.normalizationType)return k.reject(f.createError("histogram:invalid-parameters","Normalization is not allowed for date fields"));if(!h)return k.reject(f.createError("histogram:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed for date fields"))}}else if(c){if(b.normalizationType)return k.reject(f.createError("histogram:invalid-parameters","Normalization is not allowed when 'valueExpression' or 'sqlExpression' is specified"));
if(!h)return k.reject(f.createError("histogram:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed when 'valueExpression' or 'sqlExpression' is specified"))}return b}):k.reject(f.createError("histogram:invalid-parameters","'layer' must be one of these types: "+B))}function t(a,b,e){b=(b-a)/e;for(var c=[],d=a,f=1;e>=f;f++)a=d+b,a=Number(a.toFixed(16)),c.push([d,a]),d=a;return c}function C(a,b){var e=[],c=b.length;return b.forEach(function(b,g){b=f.mergeWhereClauses(a+
" \x3e\x3d "+b[0],a+(g===c-1?" \x3c\x3d ":" \x3c ")+b[1]);e.push("WHEN ("+b+") THEN "+(g+1))}),["CASE",e.join(" "),"ELSE 0 END"].join(" ")}function D(a,b,e){var c=a.layer;if(c.supportsSQLExpression){var d=t(b,e,a.numBins||r),g=C(a.sqlExpression,d);a={outStatistics:[new x({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"*"})],groupByFieldsForStatistics:[g],orderByFields:[g],where:a.sqlWhere,sqlFormat:"standard"};return c.queryStatistics(a).then(function(a){var c={};a&&a.features&&
a.features.forEach(function(a){var b=a.attributes;a=f.getCustomExprVal(b,"countOFExpr");b=f.getAttributeVal(b,"countOFExpr");0!==a&&(c[a]=b)});var g=[];return d.forEach(function(a,b){b=(b+1).toString();g.push({minValue:a[0],maxValue:a[1],count:c.hasOwnProperty(b)?c[b]:0})}),{bins:g,minValue:b,maxValue:e}})}return k.reject(f.createError("histogram:not-supported","Layer does not support standardized SQL expression for queries"))}function u(a,b,e){return(null!=b&&null!=e?k.resolve({min:b,max:e}):q(a)).then(function(b){return D(a,
b.min,b.max)})}function E(a,b){var e,c=a.layer;return e="percent-of-total"===a.normalizationType?q({layer:c,field:a.field}).then(function(a){return a.sum}):k.resolve(),e.then(function(d){d={layer:c,numBins:a.numBins,sqlExpression:b?f.msSinceUnixEpochSQL(c,a.field):f.getFieldExpr(a,d),sqlWhere:b?null:f.getSQLFilterForNormalization(a)};return u(d,a.minValue,a.maxValue)})}function F(a,b,e){var c=[],d=a.classBreakInfos,g=d[0].minValue,h=d[d.length-1].maxValue;return d.forEach(function(a){c.push([a.minValue,
a.maxValue])}),{min:g,max:h,intervals:c,sqlExpr:f.getFieldExpr(e,a.normalizationTotal),excludeZerosExpr:b,normTotal:a.normalizationTotal}}function v(a,b){var e=a.layer,c=f.getSQLFilterForNormalization(a);b=new y({classificationDefinition:f.createCBDefn(a,a.numBins||r),where:f.mergeWhereClauses(c,b)});return e.generateRenderer(b).then(function(b){return F(b,c,a)})}function G(a,b,e,c){for(var d=[],g=c.length,h=0;g>h;h++){var l=f.mergeWhereClauses(e,f.mergeWhereClauses(b+" \x3e\x3d "+c[h][0],null!==
c[h][1]?b+(h===g-1?" \x3c\x3d ":" \x3c ")+c[h][1]:""));d.push(l)}return k.eachAlways(d.map(function(b){return a.queryFeatureCount(b)}))}function n(a,b){var e=a.layer,c=a.field,d=c?e.getField(c):null,d=d?d.type===p:!1;a=a.numBins||r;var g=b.min,h=b.max,l=b.intervals||t(g,h,a),n=b.normTotal,c=b&&b.sqlExpr||c;b=b&&b.excludeZerosExpr;return e.hasLocalSource||d?k.reject(f.createError("histogram:not-implemented","Client-side calculation is not implemented yet")):G(e,c,b,l).then(function(a){return{bins:a.map(function(a,
b){return{minValue:l[b][0],maxValue:l[b][1],count:a.value}}),minValue:g,maxValue:h,normalizationTotal:n}})}function H(a){var b=a.layer,e=a.minValue,c=a.maxValue,d=a.valueExpression||a.sqlExpression,g=b.supportsSQLExpression,h=null!=e&&null!=c,l=a.field?b.getField(a.field):null,l=l?l.type===p:!1,m=!a.classificationMethod||"equal-interval"===a.classificationMethod;return d&&!b.hasLocalSource?u(a,e,c):g&&m&&!b.hasLocalSource?E(a,l):a.normalizationType||!m?v(a).then(function(b){if(h){if(e>b.max||c<b.min)return k.reject(f.createError("histogram:insufficient-data",
"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field"));var d=f.getFieldExpr(a,b.normTotal),d=f.getRangeExpr(d,e,c);return m?n(a,{min:e,max:c,sqlExpr:b.sqlExpr,excludeZerosExpr:b.excludeZerosExpr}):v(a,d).then(function(b){return n(a,b)})}return n(a,b)}):h?n(a,{min:e,max:c}):q(a).then(function(b){return b.count?n(a,{min:b.min,max:b.max}):k.reject(f.createError("histogram:insufficient-data","Either the layer has no features or none of the features have data for the field"))})}
var p="date",A=[].concat(["integer","small-integer","single","double"]).concat(p),r=10,B=m.supportedLayerTypes.join(", ");return function(a){return z(a).then(function(a){return H(a)})}});