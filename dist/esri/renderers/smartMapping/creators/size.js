//>>built
define("require exports dojo/i18n!../../nls/smartMapping dojo/_base/lang ../../../core/lang ../../ClassBreaksRenderer ../statistics/summaryStatistics ../symbology/size ../../support/utils ../../../core/promiseUtils ../../../views/SceneView ./support/utils ../support/utils".split(" "),function(J,q,A,u,B,C,D,r,v,c,w,e,g){function E(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return c.reject(e.createError("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));
var b=u.mixin({},a);return b.layer=g.createLayerAdapter(b.layer),b.layer?b.layer.load().then(function(){var a=b.layer.geometryType;if("mesh"===a)return c.reject(e.createError("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type"));if(b.worldScale){if("polyline"===a||"polygon"===a)return c.reject(e.createError("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));if(!(b.view instanceof
w))return c.reject(e.createError("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=g.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(b.layer,a,"size-visual-variable:invalid-parameters"))?c.reject(a):b}):c.reject(e.createError("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+x))}function F(a){if(!(a&&
a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return c.reject(e.createError("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=u.mixin({},a);return b.symbolType=b.symbolType||"2d",b.layer=g.createLayerAdapter(b.layer),b.layer?b.layer.load().then(function(){var a=b.layer.geometryType,h=-1<b.symbolType.indexOf("3d");if("mesh"===a)return c.reject(e.createError("size-continuous-renderer:invalid-parameters",
"Size visualization is not applicable to layers with 'mesh' geometry type"));if(h&&("polyline"===a||"polygon"===a))return c.reject(e.createError("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&!(b.view instanceof w))return c.reject(e.createError("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform"));
a=g.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(b.layer,a,"size-continuous-renderer:invalid-parameters"))?c.reject(a):b}):c.reject(e.createError("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+x))}function G(a){a=u.mixin({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");return a.worldScale=b,b&&(a.axis="3d-volumetric-uniform"===a.symbolType?"all":"height"),delete a.symbolType,
delete a.defaultSymbolEnabled,a}function H(a,b,c,h){var g=h.field,m=h.layer.geometryType,d=null==h.defaultSymbolEnabled?!0:h.defaultSymbolEnabled,f=r.cloneScheme(a.sizeScheme),t="polygon"===m,l=t?f.marker:f,k=t?f.background:null,f="polyline"===m?l.noDataWidth:l.noDataSize,k=k?e.createSymbol(k,k.color,m,h.symbolType):null;return{renderer:new C({backgroundFillSymbol:k,classBreakInfos:[{minValue:-y,maxValue:y,symbol:e.createSymbol(l,l.color,t?"point":m,h.symbolType)}],defaultLabel:d?A.other:null,defaultSymbol:d?
e.createSymbol(l,l.noDataColor,t?"point":m,h.symbolType,null,f):null,field:g,normalizationField:c,normalizationType:b,valueExpression:h.valueExpression,visualVariables:a.visualVariables.map(function(b){return v.cloneSizeVariable(b)}),authoringInfo:B.clone(a.authoringInfo)}),visualVariables:a.visualVariables.map(function(b){return v.cloneSizeVariable(b)}),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,sizeScheme:r.cloneScheme(a.sizeScheme),basemapId:a.basemapId}}function z(a){return E(a).then(function(b){var a,
h=b.normalizationField,g=h?"field":void 0;return a=b.statistics?c.resolve(b.statistics):D({layer:b.layer,field:b.field,valueExpression:b.valueExpression,sqlExpression:b.sqlExpression,sqlWhere:b.sqlWhere,normalizationType:g,normalizationField:h,minValue:b.minValue,maxValue:b.maxValue}),a.then(function(a){var d,f;d=b.layer;var g=b.field,l=(f=g&&"function"!=typeof g?d.getField(g):null)&&f.type===I,k=d.geometryType;d=b.sizeScheme;f=b.basemap;d?d=r.cloneScheme(d):(d=(f=r.getSchemes({basemap:b.basemap,
geometryType:k,worldScale:b.worldScale,view:b.view}))&&f.primaryScheme,f=f&&f.basemapId);if(d){var n,p;switch(k){case "point":case "multipoint":p=[d.minSize,d.maxSize];break;case "polyline":p=[d.minWidth,d.maxWidth];break;case "polygon":p=[d.marker.minSize,d.marker.maxSize]}n=p;p=(l=e.getDefaultDataRange(a,l,!1))||[a.min,a.max];var k=[],m=n[0];n=n[1];var q=void 0;"height"===b.axis&&(k.push({type:"size",axis:"width-and-depth",minSize:((n-m)/2+m)/4.6}),q="height",n*=2);a=(k.unshift({type:"size",field:g,
valueExpression:b.valueExpression,valueUnit:"unknown",normalizationField:h,axis:q,minSize:m,maxSize:n,minDataValue:p[0],maxDataValue:p[1],legendOptions:b.legendOptions}),c.resolve({basemapId:f,visualVariables:k,statistics:a,defaultValuesUsed:!!l,sizeScheme:r.cloneScheme(d),authoringInfo:{visualVariables:[{type:"size",minSliderValue:a.min,maxSliderValue:a.max}]}}))}else a=c.reject(e.createError("size-visual-variable:insufficient-info","Unable to find size scheme"));return a})})}Object.defineProperty(q,
"__esModule",{value:!0});var I="date",y=Math.pow(2,53)-1,x=g.supportedLayerTypes.join(", ");q.createVisualVariables=z;q.createContinuousRenderer=function(a){return F(a).then(function(a){return z(G(a)).then(function(b){var c=a.normalizationField;return H(b,c?"field":void 0,c,a)})})}});