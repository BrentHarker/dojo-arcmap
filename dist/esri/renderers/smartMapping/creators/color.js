//>>built
define("require exports dojo/i18n!../../nls/smartMapping dojo/_base/lang ../../../core/lang ../statistics/summaryStatistics ../symbology/color ../../../core/numberUtils ../../support/utils ../../ClassBreaksRenderer ../../../core/promiseUtils ../../../views/SceneView ./support/utils ../support/utils".split(" "),function(K,k,A,n,B,C,p,D,q,E,e,w,d,f){function F(b){if(!(b&&b.layer&&(b.field||b.valueExpression||b.sqlExpression)))return e.reject(d.createError("color-visual-variable:missing-parameters",
"'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var a=n.mixin({},b);return a.layer=f.createLayerAdapter(a.layer),a.layer?a.layer.load().then(function(){var c=a.layer.geometryType;if("mesh"!==c&&a.worldScale){if("polyline"===c||"polygon"===c)return e.reject(d.createError("color-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));if(!(a.view instanceof w))return e.reject(d.createError("color-visual-variable:invalid-parameters",
"'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}c=f.getFieldsList({field:a.field,normalizationField:a.normalizationField,valueExpression:a.valueExpression});return(c=d.verifyBasicFieldValidity(a.layer,c,"color-visual-variable:invalid-parameters"))?e.reject(c):a}):e.reject(d.createError("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+x))}function G(b){if(!(b&&b.layer&&(b.field||b.valueExpression||b.sqlExpression)))return e.reject(d.createError("color-continuous-renderer:missing-parameters",
"'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var a=n.mixin({},b);return a.symbolType=a.symbolType||"2d",a.layer=f.createLayerAdapter(a.layer),a.layer?a.layer.load().then(function(){var c=a.layer.geometryType,b=-1<a.symbolType.indexOf("3d");if("mesh"===c)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace";else{if(b&&("polyline"===c||"polygon"===c))return e.reject(d.createError("color-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));
if(-1<a.symbolType.indexOf("3d-volumetric")&&!(a.view instanceof w))return e.reject(d.createError("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}c=f.getFieldsList({field:a.field,normalizationField:a.normalizationField,valueExpression:a.valueExpression});return(c=d.verifyBasicFieldValidity(a.layer,c,"color-continuous-renderer:invalid-parameters"))?e.reject(c):a}):e.reject(d.createError("color-continuous-renderer:invalid-parameters",
"'layer' must be one of these types: "+x))}function H(b){b=n.mixin({},b);var a=-1<b.symbolType.indexOf("3d-volumetric");delete b.symbolType;delete b.defaultSymbolEnabled;delete b.colorMixMode;return b.worldScale=a,b}function y(b){return F(b).then(function(a){var b,t=a.normalizationField,f=t?"field":void 0;return b=a.statistics?e.resolve(a.statistics):C({layer:a.layer,field:a.field,valueExpression:a.valueExpression,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:f,normalizationField:t,
minValue:a.minValue,maxValue:a.maxValue}),b.then(function(b){var c,h;c=a.layer;var g=a.field,f=g&&"function"!=typeof g?c.getField(g):null,f=f&&f.type===I,m=c.geometryType;c=a.colorScheme;h=a.basemap;c?c=p.cloneScheme(c):(c=(h=p.getSchemes({theme:a.theme||J,basemap:a.basemap,geometryType:m,worldScale:a.worldScale,view:a.view}))&&h.primaryScheme,h=h&&h.basemapId);if(c){var r=d.createColors(c.colors,5);if(5>r.length)b=e.reject(d.createError("color-visual-variable:insufficient-info","Color scheme does not have enough colors"));
else{var m=d.getDefaultDataRange(b,f,!0),l=-1<c.id.indexOf("seq-");if(m){for(var l=m[0],k=m[1],n=(k-l)/4,u=[l],v=1;3>=v;v++)u.push(l+v*n);l=(u.push(k),D.round(u,{strictBounds:!0}))}else l=d.createStopValues(b,l);r=d.createColors(r,5);g={type:"color",field:g,valueExpression:a.valueExpression,normalizationField:t,stops:q.createColorStops({values:l,isDate:f,dateFormatOptions:f?q.timelineDateFormatOptions:null,colors:r,labelIndexes:[0,2,4]}),legendOptions:a.legendOptions};b=e.resolve({basemapId:h,visualVariable:g,
statistics:b,defaultValuesUsed:!!m,colorScheme:p.cloneScheme(c),authoringInfo:{visualVariables:[{type:"color",minSliderValue:b.min,maxSliderValue:b.max,theme:c.theme}]}})}}else b=e.reject(d.createError("color-visual-variable:insufficient-info","Unable to find color scheme"));return b})})}Object.defineProperty(k,"__esModule",{value:!0});var I="date",J="high-to-low",z=Math.pow(2,53)-1,x=f.supportedLayerTypes.join(", ");k.createVisualVariable=y;k.createContinuousRenderer=function(b){return G(b).then(function(a){return y(H(a)).then(function(b){var c=
a.normalizationField,e=c?"field":void 0,f=a.field,k=a.layer.geometryType,h=null==a.defaultSymbolEnabled?!0:a.defaultSymbolEnabled,g=p.cloneScheme(b.colorScheme);return{renderer:new E({classBreakInfos:[{minValue:-z,maxValue:z,symbol:d.createSymbol(g,g.noDataColor,k,a.symbolType,a.colorMixMode)}],defaultLabel:h?A.other:null,defaultSymbol:h?d.createSymbol(g,g.noDataColor,k,a.symbolType,a.colorMixMode):null,field:f,normalizationType:e,normalizationField:c,valueExpression:a.valueExpression,visualVariables:[q.cloneColorVariable(b.visualVariable)],
authoringInfo:B.clone(b.authoringInfo)}),visualVariable:q.cloneColorVariable(b.visualVariable),statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:p.cloneScheme(b.colorScheme),basemapId:b.basemapId}})})}});