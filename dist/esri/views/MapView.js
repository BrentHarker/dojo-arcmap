//>>built
define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper dojo/promise/all ../core/accessorSupport/decorators ../core/HandleRegistry ../core/promiseUtils ./MapViewBase ./DOMContainer ../geometry/ScreenPoint ./ui/2d/DefaultUI2D ./2d/engine/Stage ./2d/layers/support/GraphicsView2D ./2d/input/MapViewInputManager ./2d/navigation/MapViewNavigation ./support/screenshotUtils".split(" "),function(b,x,g,e,h,d,k,l,m,n,p,q,r,t,u,v,w){b=function(b){function c(a){a=b.call(this,
a)||this;return a._graphicsView=null,a._mapViewHandles=new k,a._stage=null,a.inputManager=new u({view:a}),a.navigation=null,a.ui=null,a.rendering=!1,a}return g(c,b),Object.defineProperty(c.prototype,"interacting",{get:function(){return this.navigation&&this.navigation.interacting||!1},enumerable:!0,configurable:!0}),c.prototype.hitTest=function(a,f){if(!this.ready)return null;var b;b=null!=a&&a.x?a:new p({x:a,y:f});var c=this.toMap(b);a=[this._graphicsView];return a.push.apply(a,this.allLayerViews.toArray().reverse()),
h(a.map(function(a){return a&&a.hitTest?a.hitTest(b.x,b.y):null})).then(function(a){return{screenPoint:b,results:a.filter(function(a){return null!=a}).map(function(a){return{mapPoint:c,graphic:a}})}})},c.prototype.takeScreenshot=function(a){return this.ready?(a=w.adjustScreenshotSettings(a,this),this._stage.takeScreenshot(a)):l.reject("Map view cannot be used before it is ready")},c.prototype.on=function(a,b,c){var f=this.inputManager&&this.inputManager.viewEvents.register(a,b,c);return f?f:this.inherited(arguments)},
c.prototype.destroyLayerViews=function(){this.inherited(arguments);this._stage&&(this._stage.destroy(),this._stage=null)},c.prototype._startup=function(){var a=this;this.inherited(arguments);var b=new r(this.surface),c=new t({view:this,graphics:this.graphics}),d=new v({view:this,animationManager:this.animationManager});this._stage=b;this._graphicsView=c;this._set("navigation",d);this._mapViewHandles.add([this.allLayerViews.on("change",function(){return a._updateStageChildren()}),b.on("post-render",
function(){return a._set("rendering",a.allLayerViews.some(function(a){return!0===a.rendering}))}),this.watch("stationary",function(a){return b.stationary=a},!0),this.watch("state.viewpoint",function(c){return b.state=a.state},!0)]);b.state=this.state;this._updateStageChildren()},c.prototype._tearDown=function(){this._setup&&(this._graphicsView.destroy(),this._mapViewHandles.removeAll(),this._stage.destroy(),this.navigation.destroy(),this._stage=null,this._graphicsView=null,this._set("navigation",
null),this.inherited(arguments))},c.prototype._updateStageChildren=function(){var a=this;this._stage.removeAllChildren();this.allLayerViews.filter(function(a){return null!=a.container}).forEach(function(b,c){a._stage.addChildAt(b.container,c)});this._stage.addChild(this._graphicsView.container)},c}(d.declared(m,n));return e([d.property({readOnly:!0})],b.prototype,"inputManager",void 0),e([d.property({readOnly:!0})],b.prototype,"navigation",void 0),e([d.property({dependsOn:["navigation.interacting"],
type:Boolean})],b.prototype,"interacting",null),e([d.property({type:q})],b.prototype,"ui",void 0),e([d.property({readOnly:!0})],b.prototype,"rendering",void 0),b=e([d.subclass("esri.views.MapView")],b)});