//>>built
define(["require","exports","./TileKey","../../../geometry/support/spatialReferenceUtils"],function(u,v,f,t){function r(c,a,b){return c[0]=a,c[1]=b,c}return function(){function c(a,b,c,k,d,e,g,h,l,m,n,q){this.level=a;this.resolution=b;this.scale=c;this.origin=k;this.first=d;this.last=e;this.size=g;this.norm=h;this.worldStart=l;this.worldEnd=m;this.worldSize=n;this.wrap=q}return c.create=function(a,b,p){var k=t.getInfo(a.spatialReference),d=[a.origin.x,a.origin.y],e=[a.size[0]*b.resolution,a.size[1]*
b.resolution],g=[-(1/0),-(1/0)],h=[+(1/0),+(1/0)],l=[+(1/0),+(1/0)];p&&(r(g,Math.max(0,Math.floor((p.xmin-d[0])/e[0])),Math.max(0,Math.floor((d[1]-p.ymax)/e[1]))),r(h,Math.max(0,Math.floor((p.xmax-d[0])/e[0])),Math.max(0,Math.floor((d[1]-p.ymin)/e[1]))),r(l,h[0]-g[0]+1,h[1]-g[1]+1));var m,n,q,f;return k?(m=[Math.ceil(Math.round(2*k.origin[1]/b.resolution)/a.size[0]),l[1]],n=[Math.floor((k.origin[0]-d[0])/e[0]),g[1]],q=[m[0]-n[0]-1,h[1]],f=!0):(n=g,q=h,m=l,f=!1),new c(b.level,b.resolution,b.scale,
d,g,h,l,e,n,q,m,f)},c.prototype.normalizeCol=function(a){if(!this.wrap)return a;var b=this.worldSize[0];return 0>a?b-1-Math.abs((a+1)%b):a%b},c.prototype.denormalizeCol=function(a,b){return this.wrap?this.worldSize[0]*b+a:a},c.prototype.getWorldForColumn=function(a){return this.wrap?Math.floor(a/this.worldSize[0]):0},c.prototype.getFirstColumnForWorld=function(a){return a*this.worldSize[0]+this.first[0]},c.prototype.getLastColumnForWorld=function(a){return a*this.worldSize[0]+this.first[0]+this.size[0]-
1},c.prototype.getColumnForX=function(a){return(a-this.origin[0])/this.norm[0]},c.prototype.getXForColumn=function(a){return this.origin[0]+a*this.norm[0]},c.prototype.getRowForY=function(a){return(this.origin[1]-a)/this.norm[1]},c.prototype.getYForRow=function(a){return this.origin[1]-a*this.norm[1]},c.prototype.getTileBounds=function(a,b){b=f.pool.acquire(b);var c=this.getXForColumn(this.denormalizeCol(b.col,b.world)),k=this.getYForRow(b.row+1),d=this.getXForColumn(this.denormalizeCol(b.col,b.world)+
1),e=this.getYForRow(b.row);return a[0]=c,a[1]=k,a[2]=d,a[3]=e,f.pool.release(b),a},c.prototype.getTileCoords=function(a,b){b=f.pool.acquire(b);return r(a,this.getXForColumn(this.denormalizeCol(b.col,b.world)),this.getYForRow(b.row)),f.pool.release(b),a},c}()});