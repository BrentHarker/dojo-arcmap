//>>built
require({cache:{"url:esri/views/2d/engine/webgl/Shaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\n\x3c!--\n  Add your GLSL snippets to this file. You should start from\n  importing your old GLSL files. For instance, if you have a\n  file such as myShader.vs.glsl you should create a new \x3csnippet name\x3d"myShaderVS"\x3e\n  and then copy and paste the GLSL source as the content. You will then convert your\n  code to use the {@link esri/views/2d/engine/webgl/glShaderSnippets glShaderSnippets}\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\n--\x3e\n\x3csnippets\x3e\n\n  \x3csnippet name\x3d"foobarVS"\x3e\n  \x3c/snippet\x3e\n\n  \x3csnippet name\x3d"foobarFS"\x3e\n  \x3c/snippet\x3e\n\n\x3c/snippets\x3e\n\n',
"url:esri/views/2d/engine/webgl/bitblit.vs.glsl":"attribute vec2 a_pos;\nattribute vec2 a_tex;\n\nvarying mediump vec2 v_uv;\n\nvoid main(void) {\n  gl_Position \x3d vec4(a_pos, 0.0, 1.0);\n  v_uv \x3d a_tex;\n}\n","url:esri/views/2d/engine/webgl/bitblit.fs.glsl":"\tuniform lowp sampler2D u_tex;\n\tuniform lowp float u_opacity;\n\n\tvarying mediump vec2 v_uv;\n\n\tvoid main() {\n\t\tlowp vec4 color \x3d texture2D(u_tex, v_uv);\n\n    // Note: output in pre-multiplied alpha for correct alpha compositing\n\t\tgl_FragColor \x3d color *  u_opacity;\n\t}\n",
"url:esri/views/2d/engine/webgl/stencil.vs.glsl":"attribute vec2 a_pos;\n\nvoid main() {\n  gl_Position \x3d vec4(a_pos, 0.0, 1.0);\n}\n","url:esri/views/2d/engine/webgl/stencil.fs.glsl":"void main() {\n  gl_FragColor \x3d vec4(1.0, 1.0, 1.0, 1.0);\n}\n"}});
define("require exports ../../../webgl/ShaderSnippets dojo/text!./Shaders.xml dojo/text!./bitblit.vs.glsl dojo/text!./bitblit.fs.glsl dojo/text!./stencil.vs.glsl dojo/text!./stencil.fs.glsl".split(" "),function(b,l,d,e,f,g,h,k){function c(b,c){a+='\x3csnippet name\x3d"'+b+'"\x3e\x3c![CDATA[';a+=c;a+="]]\x3e\x3c/snippet\x3e"}var a="",a=a+'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e',a=a+"\x3csnippets\x3e";c("bitblitVS",f);c("bitblitFS",g);c("stencilVS",h);c("stencilFS",k);a+="\x3c/snippets\x3e";
b=new d;return d.parse(a,b),d.parse(e,b),b});