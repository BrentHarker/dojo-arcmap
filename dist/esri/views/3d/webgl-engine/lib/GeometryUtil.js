//>>built
define(["./GeometryData","./BufferVectorMath","./Util","./gl-matrix"],function(B,Q,N,O){function P(a,b,c,d,g){return Math.abs(f.dot(b,a))>g?!1:(f.cross(a,b,c),f.normalize(c),f.cross(c,a,d),f.normalize(d),!0)}var f=O.vec3,Z=O.vec4,R=O.vec3d,l=N.VertexAttrConstants,G=Q.Vec3Compact,H=R.create(),U=R.create(),Y={createSphereGeometry:function(a,b,c,d,g,h,e){a=a||50;d=void 0!==d?d:-Math.PI;g=void 0!==g?g:2*Math.PI;h=void 0!==h?h:.5*-Math.PI;e=void 0!==e?e:Math.PI;var p,k,m=Math.max(3,Math.floor(b)||8),n=
Math.max(2,Math.floor(c)||6),u=(m+1)*(n+1);c=new Float32Array(3*u);b=new Float32Array(3*u);var u=new Float32Array(2*u),v=[],A=f.create(),q=0;for(k=0;n>=k;k++){var t=[],r=k/n,w=h+r*e,C=Math.cos(w);for(p=0;m>=p;p++){var x=p/m,z=d+x*g,M=Math.cos(z)*C*a,D=Math.sin(w)*a,z=-Math.sin(z)*C*a;c[3*q]=M;c[3*q+1]=D;c[3*q+2]=z;f.set3(M,D,z,A);f.normalize(A);b[3*q]=A[0];b[3*q+1]=A[1];b[3*q+2]=A[2];u[2*q]=x;u[2*q+1]=r;t.push(q);++q}v.push(t)}a=new Uint32Array(2*m*(n-1)*3);for(k=q=0;n>k;k++)for(p=0;m>p;p++)d=v[k][p],
g=v[k][p+1],h=v[k+1][p+1],e=v[k+1][p],0===k?(a[q++]=d,a[q++]=h,a[q++]=e):k===n-1?(a[q++]=d,a[q++]=g,a[q++]=h):(a[q++]=d,a[q++]=g,a[q++]=h,a[q++]=h,a[q++]=e,a[q++]=d);N.assert(q===a.length);m={};m[l.POSITION]=a;m[l.NORMAL]=a;m[l.UV0]=a;n={};return n[l.POSITION]={size:3,data:c},n[l.NORMAL]={size:3,data:b},n[l.UV0]={size:2,data:u},new B(n,m)},createPolySphereGeometry:function(a,b,c){function d(c,d){c>d&&(c=d+(d=c,0));var b=c.toString()+"."+d.toString();if(e[b])return e[b];var g=h.length;return h.length+=
3,G.add(h,3*c,h,3*d,h,g),G.scale(h,g,a/G.length(h,g)),g/=3,e[b]=g,g}var g,h;c?(h=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],c=[0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]):(c=a*(1+Math.sqrt(5))/2,h=[-a,c,0,a,c,0,-a,-c,0,a,-c,0,0,-a,c,0,a,c,0,-a,-c,0,a,-c,c,0,-a,c,0,a,-c,0,-a,-c,0,a],c=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]);for(g=0;g<h.length;g+=3)G.scale(h,g,a/G.length(h,g));var e={};for(g=0;b>g;g++){for(var f=
c.length,k=new Uint32Array(4*f),m=0;f>m;m+=3){var n=c[m],u=c[m+1],v=c[m+2],A=d(n,u),q=d(u,v),t=d(v,n),r=4*m;k[r]=n;k[r+1]=A;k[r+2]=t;k[r+3]=u;k[r+4]=q;k[r+5]=A;k[r+6]=v;k[r+7]=t;k[r+8]=q;k[r+9]=A;k[r+10]=q;k[r+11]=t}c=k;e={}}b=new Float32Array(h);for(g=0;b>g;g+=3)G.normalize(b,g);h=new Float32Array(h);g={};g[l.POSITION]=c;g[l.NORMAL]=c;c={};return c[l.POSITION]={size:3,data:h},c[l.NORMAL]={size:3,data:b},new B(c,g)},createPointGeometry:function(a,b,c,d,g,h,e){var f=new Float32Array(3);f[0]=b?b[0]:
0;f[1]=b?b[1]:0;f[2]=b?b[2]:0;b=new Float32Array(3);if(b[0]=a?a[0]:0,b[1]=a?a[1]:0,b[2]=a?a[2]:1,null==h)a=new Float32Array(2),a[0]=0,a[1]=0;else{a=new Float32Array(h.length);for(var k=0;k<h.length;k++)a[k]=h[k]}h=new Uint8Array(4);h[0]=c?255*c[0]:255;h[1]=c?255*c[1]:255;h[2]=c?255*c[2]:255;h[3]=c&&3<c.length?255*c[3]:255;c=new Float32Array(2);if(c[0]=null!=d&&2==d.length?d[0]:1,c[1]=null!=d&&2==d.length?d[1]:1,null!=g){var m=new Float32Array(4);m[0]=g[0];m[1]=g[1];m[2]=g[2];m[3]=g[3]}if(null!=e){var n=
new Float32Array(4);n[0]=e[0];n[1]=e[1];n[2]=e[2];n[3]=e[3]}k=new Uint32Array(1);k[0]=0;d={};d[l.POSITION]=k;d[l.NORMAL]=k;d[l.UV0]=k;d[l.COLOR]=k;d[l.SIZE]=k;null!=g&&(d[l.AUXPOS1]=k);null!=e&&(d[l.AUXPOS2]=k);k={};return k[l.POSITION]={size:3,data:f},k[l.NORMAL]={size:3,data:b},k[l.UV0]={size:a.length,data:a},k[l.COLOR]={size:4,data:h},k[l.SIZE]={size:2,data:c},null!=g&&(k[l.AUXPOS1]={size:4,data:m}),null!=e&&(k[l.AUXPOS2]={size:4,data:n}),new B(k,d,B.DefaultOffsets,"point")},createPointArrayGeometry:function(a,
b){for(var c=new Float32Array(3*a.length),d=new Float32Array(b?3*a.length:3),g=new Uint32Array(a.length),h=new Uint32Array(a.length),e=0;e<a.length;e++)c[3*e]=a[e][0],c[3*e+1]=a[e][1],c[3*e+2]=a[e][2],b&&(d[3*e]=b[e][0],d[3*e+1]=b[e][1],d[3*e+2]=b[e][2]),g[e]=e,h[e]=0;b||(d[0]=0,d[1]=1,d[2]=0);a=new Float32Array(2);a[0]=0;a[1]=0;e={};e[l.POSITION]=g;e[l.NORMAL]=b?g:h;e[l.UV0]=h;b={};return b[l.POSITION]={size:3,data:c},b[l.NORMAL]={size:3,data:d},b[l.UV0]={size:2,data:a},new B(b,e,B.DefaultOffsets,
"point")},createTriangleGeometry:function(){var a=new Float32Array(9);a[0]=0;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=100;a[6]=100;a[7]=0;a[8]=0;var b=new Uint32Array(3);b[0]=0;b[1]=1;b[2]=2;var c=new Float32Array(3);c[0]=0;c[1]=1;c[2]=0;var d=new Uint32Array(3);d[0]=0;d[1]=0;d[2]=0;var g=new Float32Array(2);g[0]=0;g[1]=0;var h=new Uint32Array(3);h[0]=0;h[1]=0;h[2]=0;var e={};e[l.POSITION]=b;e[l.NORMAL]=d;e[l.UV0]=h;b={};return b[l.POSITION]={size:3,data:a},b[l.NORMAL]={size:3,data:c},b[l.UV0]={size:2,data:g},
new B(b,e)},createSquareGeometry:function(a){var b,c,d=new Float32Array(12);if(a)for(b=0;4>b;b++)for(c=0;3>c;c++)d[3*b+c]=a[b][c];else d[0]=-1,d[1]=-1,d[2]=0,d[3]=1,d[4]=-1,d[5]=0,d[6]=1,d[7]=1,d[8]=0,d[9]=-1,d[10]=1,d[11]=0;c=new Uint32Array(6);c[0]=0;c[1]=1;c[2]=2;c[3]=2;c[4]=3;c[5]=0;a=new Float32Array(3);a[0]=0;a[1]=0;a[2]=1;var g=new Uint32Array(6);for(b=0;6>b;b++)g[b]=0;b=new Float32Array(8);b[0]=0;b[1]=0;b[2]=1;b[3]=0;b[4]=1;b[5]=1;b[6]=0;b[7]=1;var h=new Uint8Array(4);h[0]=255;h[1]=255;h[2]=
255;h[3]=255;var e={};e[l.POSITION]=c;e[l.NORMAL]=g;e[l.UV0]=c;e[l.COLOR]=g;c={};return c[l.POSITION]={size:3,data:d},c[l.NORMAL]={size:3,data:a},c[l.UV0]={size:2,data:b},c[l.COLOR]={size:4,data:h},new B(c,e)},createBoxGeometry:function(){var a,b,c=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],d=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],g=[0,0,1,0,1,1,0,1],h=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],e=Array(36);
for(a=0;6>a;a++)for(b=0;6>b;b++)e[6*a+b]=a;var f=Array(36);for(a=0;6>a;a++)f[6*a+0]=0,f[6*a+1]=1,f[6*a+2]=2,f[6*a+3]=2,f[6*a+4]=3,f[6*a+5]=0;return function(a){var b;Array.isArray(a)||(a=[a,a,a]);var k=new Float32Array(24);for(b=0;8>b;b++)k[3*b]=c[b][0]*a[0],k[3*b+1]=c[b][1]*a[1],k[3*b+2]=c[b][2]*a[2];a={};a[l.POSITION]=new Uint32Array(h);a[l.NORMAL]=new Uint32Array(e);a[l.UV0]=new Uint32Array(f);b={};return b[l.POSITION]={size:3,data:k},b[l.NORMAL]={size:3,data:new Float32Array(d)},b[l.UV0]={size:2,
data:new Float32Array(g)},new B(b,a)}}(),createDiamondGeometry:function(){var a=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],b=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],c=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],d=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];return function(g){var h;Array.isArray(g)||(g=[g,g,g]);var e=new Float32Array(18);for(h=0;6>h;h++)e[3*h]=a[h][0]*g[0],e[3*h+1]=a[h][1]*g[1],e[3*h+2]=a[h][2]*g[2];g={};g[l.POSITION]=new Uint32Array(c);
g[l.NORMAL]=new Uint32Array(d);h={};return h[l.POSITION]={size:3,data:e},h[l.NORMAL]={size:3,data:new Float32Array(b)},new B(h,g)}}(),createTetrahedronGeometry:function(){var a=f.createFrom(-.5,0,-.5),b=f.createFrom(.5,0,-.5),c=f.createFrom(0,0,.5),d=f.createFrom(0,.5,0),g=f.create(),h=f.create(),e=f.create(),p=f.create(),k=f.create();f.subtract(a,d,g);f.subtract(a,b,h);f.cross(g,h,e);f.normalize(e,e);f.subtract(b,d,g);f.subtract(b,c,h);f.cross(g,h,p);f.normalize(p,p);f.subtract(c,d,g);f.subtract(c,
a,h);f.cross(g,h,k);f.normalize(k,k);var m=[a,b,c,d],n=[0,-1,0,e[0],e[1],e[2],p[0],p[1],p[2],k[0],k[1],k[2]],u=[0,1,2,3,1,0,3,2,1,3,0,2],v=[0,0,0,1,1,1,2,2,2,3,3,3];return function(a){var b;Array.isArray(a)||(a=[a,a,a]);var c=new Float32Array(12);for(b=0;4>b;b++)c[3*b]=m[b][0]*a[0],c[3*b+1]=m[b][1]*a[1],c[3*b+2]=m[b][2]*a[2];a={};a[l.POSITION]=new Uint32Array(u);a[l.NORMAL]=new Uint32Array(v);b={};return b[l.POSITION]={size:3,data:c},b[l.NORMAL]={size:3,data:new Float32Array(n)},new B(b,a)}}(),createConeGeometry:function(a,
b,c,d){var g=0,h=f.createFrom(0,g,0),e=f.createFrom(0,g+a,0),p=f.createFrom(0,-1,0),k=f.createFrom(0,1,0);d&&(g=a,e=f.createFrom(0,0,0),h=f.createFrom(0,g,0),p=f.createFrom(0,1,0),k=f.createFrom(0,-1,0));var h=[e,h],p=[p,k],k=c+2,m=0,e=Math.sqrt(a*a+b*b);if(d)for(d=c-1;0<=d;d--)m=2*Math.PI/c*d,n=f.createFrom(Math.cos(m)*b,g,Math.sin(m)*b),h.push(n),m=f.createFrom(a*Math.cos(m)/e,-b/e,a*Math.sin(m)/e),p.push(m);else for(d=0;c>d;d++){var m=2*Math.PI/c*d,n=f.createFrom(Math.cos(m)*b,g,Math.sin(m)*b);
h.push(n);m=f.createFrom(a*Math.cos(m)/e,b/e,a*Math.sin(m)/e);p.push(m)}a=new Uint32Array(6*(c+2));c=new Uint32Array(6*(c+2));g=b=0;for(d=3;d<h.length;d++)a[b++]=1,a[b++]=d-1,a[b++]=d,c[g++]=0,c[g++]=0,c[g++]=0;a[b++]=h.length-1;a[b++]=2;a[b++]=1;c[g++]=0;c[g++]=0;c[g++]=0;for(d=3;d<h.length;d++)a[b++]=d,a[b++]=d-1,a[b++]=0,c[g++]=d,c[g++]=d-1,c[g++]=1;a[b++]=0;a[b++]=2;a[b++]=h.length-1;c[g++]=1;c[g++]=2;c[g++]=p.length-1;g=1;Array.isArray(g)||(g=[g,g,g]);b=new Float32Array(3*k);for(d=0;k>d;d++)b[3*
d]=h[d][0]*g[0],b[3*d+1]=h[d][1]*g[1],b[3*d+2]=h[d][2]*g[2];h=new Float32Array(3*k);for(d=0;k>d;d++)h[3*d]=p[d][0],h[3*d+1]=p[d][1],h[3*d+2]=p[d][2];p={};p[l.POSITION]=a;p[l.NORMAL]=c;k={};return k[l.POSITION]={size:3,data:b},k[l.NORMAL]={size:3,data:h},new B(k,p)},createCylinderGeometry:function(a,b,c,d,g,h){d||(d=f.createFrom(1,0,0));g||(g=f.createFrom(0,0,0));h=void 0===h?!0:h;var e=f.create();f.normalize(d,e);d=f.create();f.scale(e,Math.abs(a),d);var p=f.create();f.scale(d,-.5,p);f.add(p,g);var k=
f.createFrom(0,1,0);Math.abs(.2>1-f.dot(e,k))&&f.set3(0,0,1,k);var m=f.create();f.cross(e,k,m);f.normalize(m);f.cross(m,e,k);var n=2*c+(h?2:0),u=c+(h?2:0);g=new Float32Array(3*n);a=new Float32Array(3*u);var v=new Float32Array(2*n),A=new Uint32Array(3*c*(h?4:2)),q=new Uint32Array(3*c*(h?4:2));h&&(g[3*(n-2)+0]=p[0],g[3*(n-2)+1]=p[1],g[3*(n-2)+2]=p[2],v[2*(n-2)]=0,v[2*(n-2)+1]=0,g[3*(n-1)+0]=g[3*(n-2)+0]+d[0],g[3*(n-1)+1]=g[3*(n-2)+1]+d[1],g[3*(n-1)+2]=g[3*(n-2)+2]+d[2],v[2*(n-1)]=1,v[2*(n-1)+1]=1,a[3*
(u-2)+0]=-e[0],a[3*(u-2)+1]=-e[1],a[3*(u-2)+2]=-e[2],a[3*(u-1)+0]=e[0],a[3*(u-1)+1]=e[1],a[3*(u-1)+2]=e[2]);for(var t,r=function(a,b,c){A[a]=b;q[a]=c},w=0,C=f.create(),x=f.create(),e=0;c>e;e++)t=2*Math.PI/c*e,f.scale(k,Math.sin(t),C),f.scale(m,Math.cos(t),x),f.add(C,x),a[3*e+0]=C[0],a[3*e+1]=C[1],a[3*e+2]=C[2],f.scale(C,b),f.add(C,p),g[3*e+0]=C[0],g[3*e+1]=C[1],g[3*e+2]=C[2],v[2*e+0]=e/c,v[2*e+1]=0,g[3*(e+c)+0]=g[3*e+0]+d[0],g[3*(e+c)+1]=g[3*e+1]+d[1],g[3*(e+c)+2]=g[3*e+2]+d[2],v[2*(e+c)+0]=e/c,v[2*
e+1]=1,t=(e+1)%c,r(w++,e,e),r(w++,e+c,e),r(w++,t,t),r(w++,t,t),r(w++,e+c,e),r(w++,t+c,t);if(h){for(e=0;c>e;e++)t=(e+1)%c,r(w++,n-2,u-2),r(w++,e,u-2),r(w++,t,u-2);for(e=0;c>e;e++)t=(e+1)%c,r(w++,e+c,u-1),r(w++,n-1,u-1),r(w++,t+c,u-1)}b={};b[l.POSITION]=A;b[l.NORMAL]=q;b[l.UV0]=A;c={};return c[l.POSITION]={size:3,data:g},c[l.NORMAL]={size:3,data:a},c[l.UV0]={size:2,data:v},new B(c,b)},createTubeGeometry:function(a,b,c,d,g){c=c||10;d=null!=d?d:!0;N.assert(1<a.length);for(var h=[],e=[],f=0;c>f;f++){h.push([0,
-f-1,-((f+1)%c)-1]);var k=f/c*2*Math.PI;e.push([Math.cos(k)*b,Math.sin(k)*b])}return Y.createPathExtrusionGeometry(e,a,[[0,0,0]],h,d,g)},createPathExtrusionGeometry:function(a,b,c,d,g,h){var e,p=a.length,k=new Float32Array(b.length*p*3+(6*c.length||0)),m=new Float32Array(b.length*p+(2*c.length||0)),n=new Float32Array(b.length*p*3+(c?6:0)),u=0,v=0,A=0,q=(b.length-1)*p*6+6*d.length,t=new Uint32Array(q),q=new Uint32Array(q),r=0,w=0,C=f.create(),x=f.create(),z=f.create(),M=f.create(),D=(f.create(),f.create()),
y=(f.create(),f.create(),f.create()),G=f.create(),E=f.create(),H=f.create(),L=f.create(),O=(f.create(),f.create(),f.create()),V=f.create(),Q=f.create(),S=Z.create();f.set3(0,1,0,H);f.subtract(b[1],b[0],x);f.normalize(x);g?(f.add(b[0],h,E),f.normalize(E,z)):f.set3(0,0,1,z);P(x,z,D,z,.99619469809)||P(x,H,D,z,.99619469809)||P(x,H,D,z,.99619469809);f.set(z,M);f.set(D,V);for(e=0;e<c.length;e++)f.scale(D,c[e][0],y),f.scale(z,c[e][2],E),f.add(y,E),f.add(y,b[0]),k[u++]=y[0],k[u++]=y[1],k[u++]=y[2],m[A++]=
0;n[v++]=-x[0];n[v++]=-x[1];n[v++]=-x[2];for(e=0;e<d.length;e++)t[r++]=0<d[e][0]?d[e][0]:-d[e][0]-1+c.length,t[r++]=0<d[e][1]?d[e][1]:-d[e][1]-1+c.length,t[r++]=0<d[e][2]?d[e][2]:-d[e][2]-1+c.length,q[w++]=0,q[w++]=0,q[w++]=0;var T,I=c.length;e=c.length-1;for(var J=0;J<b.length;J++){if(T=!1,0<J){f.set(x,C);J<b.length-1?(f.subtract(b[J+1],b[J],x),f.normalize(x)):T=!0;f.add(C,x,L);f.normalize(L);f.add(b[J-1],M,O);S[0]=L[0];S[1]=L[1];S[2]=L[2];S[3]=-R.dot(L,b[J]);if(N.rayPlane(O,C,S,E))f.subtract(E,
b[J]),f.normalize(E,z),f.cross(L,z,D),f.normalize(D);else{var F=L,K=V,U=H,W=D,X=z;P(F,M,W,X,.99619469809)||P(F,K,W,X,.99619469809)||P(F,U,W,X,.99619469809)}f.set(z,M);f.set(D,V)}g&&(f.add(b[J],h,E),f.normalize(E,Q));for(F=0;p>F;F++)if(f.scale(D,a[F][0],y),f.scale(z,a[F][1],E),f.add(y,E),f.normalize(y,G),n[v++]=G[0],n[v++]=G[1],n[v++]=G[2],g?m[A++]=f.dot(y,Q):m[A++]=y[2],f.add(y,b[J]),k[u++]=y[0],k[u++]=y[1],k[u++]=y[2],!T)for(K=(F+1)%p,t[r++]=I+F,t[r++]=I+p+F,t[r++]=I+K,t[r++]=I+K,t[r++]=I+p+F,t[r++]=
I+p+K,K=0;6>K;K++)q[w++]=t[r-6+K]-e;I+=p}T=b[b.length-1];for(e=0;e<c.length;e++)f.scale(D,c[e][0],y),f.scale(z,c[e][1],E),f.add(y,E),f.add(y,T),k[u++]=y[0],k[u++]=y[1],k[u++]=y[2],m[A++]=0;a=v/3;n[v++]=x[0];n[v++]=x[1];n[v++]=x[2];p=I-p;for(e=0;e<d.length;e++)t[r++]=0<=d[e][0]?I+d[e][0]:-d[e][0]-1+p,t[r++]=0<=d[e][2]?I+d[e][2]:-d[e][2]-1+p,t[r++]=0<=d[e][1]?I+d[e][1]:-d[e][1]-1+p,q[w++]=a,q[w++]=a,q[w++]=a;d={};d[l.POSITION]=t;d[l.NORMAL]=q;t={};return t[l.POSITION]={size:3,data:k},t.zOffset={size:1,
data:m},t[l.NORMAL]={size:3,data:n},new B(t,d)},createPolylineGeometry:function(a){N.assert(1<a.length,"createPolylineGeometry(): polyline needs at least 2 points");N.assert(3===a[0].length,"createPolylineGeometry(): malformed vertex");for(var b=new Float32Array(3*a.length),c=new Uint32Array(2*(a.length-1)),d=0,g=0,f=0;f<a.length;f++){for(var e=0;3>e;e++)b[d++]=a[f][e];0<f&&(c[g++]=f-1,c[g++]=f)}a={};d={};return a[l.POSITION]=c,d[l.POSITION]={size:3,data:b},new B(d,a,B.DefaultOffsets,"line")},addVertexColors:function(a,
b,c){var d,g,f;if(c){var e={};c=a.getVertexAttr();for(f in c)e[f]=c[f];a=a.getFaces();c=Array(a.length);for(g=0;g<a.length;g++){d={};for(f in a[g].indices)d[f]=a[g].indices[f];c[g]={type:a[g].type,indices:d,positionKey:a[g].positionKey}}a=new B(c,e)}b=b||[1,1,1,1];f=new Uint8Array(4);f[0]=255*b[0];f[1]=255*b[1];f[2]=255*b[2];f[3]=255*(3<b.length?b[3]:1);a.getVertexAttr()[l.COLOR]={size:4,data:f};c=a.getFaces();for(g=0;g<c.length;g++)b=c[g],d=new Uint32Array(b.indices[b.positionKey].length),b.indices[l.COLOR]=
d;return a},addNormals:function(a){var b=a.getVertexAttr();a=a.getFaces();for(var c=Q.Vec3Compact.subtract,d=a.map(function(a){return a.indices.position.length/3}).reduce(function(a,b){return a+b}),d=new Float32Array(3*d),f=b.position.data,h=0,e=0;e<a.length;e++){for(var l=a[e].indices.position,k=new Uint32Array(l.length),m=0;m<l.length;m+=3){c(f,3*l[m],f,3*l[m+2],U,0);c(f,3*l[m],f,3*l[m+1],H,0);R.cross(H,U);R.normalize(H);var n=h/3;d[h++]=H[0];d[h++]=H[1];d[h++]=H[2];k[m]=n;k[m+1]=n;k[m+2]=n}a[e].indices.normal=
k}b.normal={size:3,data:d}},cgToGIS:function(a){var b,c;b=a.getVertexAttr();a=b.position.data;var d=b.normal.data;if(d)for(b=0;b<d.length;b+=3)c=d[b+1],d[b+1]=-d[b+2],d[b+2]=c;if(a)for(b=0;b<a.length;b+=3)c=a[b+1],a[b+1]=-a[b+2],a[b+2]=c}};return Y});